name: Deploy Face Recognition Attendance System

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential pkg-config
          sudo apt-get install -y libx11-dev libatlas-base-dev
          sudo apt-get install -y libgtk-3-dev libboost-python-dev
          sudo apt-get install -y libopenblas-dev liblapack-dev
          sudo apt-get install -y python3-dev
          sudo apt-get install -y libsm6 libxext6 libxrender-dev
          sudo apt-get install -y libgl1 libglib2.0-0
          sudo apt-get install -y gcc g++ wget make

      - name: Install Python build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install numpy==1.24.3

      - name: Install dlib
        run: |
          git clone https://github.com/davisking/dlib.git
          cd dlib
          python setup.py install

      - name: Install face recognition packages
        run: |
          pip install face-recognition-models==0.3.0
          pip install face-recognition==1.3.0

      - name: Install project requirements
        run: |
          pip install -r requirements.txt

      - name: Create required directories
        run: |
          mkdir -p static/student_photos
          mkdir -p static/attendance_sheets
          mkdir -p static/class_photos
          mkdir -p encodings

      - name: Set up MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: '5.0'
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Debug environment setup
        run: |
          echo "Checking for MONGO_URI secret..."
          if [ -n "${{ secrets.MONGO_URI }}" ]; then
            echo "✓ MONGO_URI secret is set"
          else
            echo "✗ Error: MONGO_URI secret is not set in GitHub repository secrets"
            echo "Please add MONGO_URI to repository secrets (not environment secrets)"
            exit 1
          fi

      - name: Set up environment files
        run: |
          echo "Setting up .env file..."
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "Setting up GitHub environment..."
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
          echo "✓ Environment configuration complete"

      - name: Initialize database
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          echo "Starting database initialization..."
          echo "Testing MongoDB connection..."
          python -c "from database import client; print('MongoDB connection successful!')"
          echo "Running database initialization..."
          python init_db.py
          echo "✓ Database initialization complete"

      - name: Build and check application
        run: |
          python -c "import face_recognition; import cv2; import numpy; print('Dependencies successfully imported')"

      # - name: Deploy to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.14
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
      #     buildpack: "heroku/python"
      #   env:
      #     HD_MONGO_URI: ${{ secrets.MONGO_URI }}
